<frameTree version="0.94.51023.0"><frameException type="System.InvalidOperationException"><tag exceptionState="expected"><generatedTestRef idref="5aec3629-e037-4fe1-9837-2f0c24666d62"/>
</tag>
<frameNode><frame value="  at UnitTestExampleTest.&lt;GetFileContentUsingInterface&gt;b__0(String) in D:\UnitTesting\UnitTesting.Tests\UnitTestExampleTest.cs(61)" method="UnitTestExampleTest.&lt;GetFileContentUsingInterface&gt;b__0(String)" offset="25" file="D:\UnitTesting\UnitTesting.Tests\UnitTestExampleTest.cs" line="61"><method assemblyName="UnitTesting.Tests" name="&lt;GetFileContentUsingInterface&gt;b__0" static="true" token="600000d"><declaringType assemblyName="UnitTesting.Tests" name="UnitTestExampleTest" token="2000002" namespace="UnitTesting.UnitTest"/>
<parameter name="fName" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[            Ifs.ReadAllTextString = fName =>
            {
                if (fName == null)]]></beforeSource>
<source><![CDATA[                    throw new InvalidOperationException("File Name Can't be NULL");]]></source>
<afterSource><![CDATA[                else if (fName.Length == 0)
                    throw new InvalidOperationException("Length of File Name Can't be Zero");
                else]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="5aec3629-e037-4fe1-9837-2f0c24666d62"/>
</tag>
<frameNode><frame value="  at UnitTestExample.GetFileContentUsingInterface(String) in D:\UnitTesting\UnitTesting\UnitTestExample.vb(47)" method="UnitTestExample.GetFileContentUsingInterface(String)" offset="8" file="D:\UnitTesting\UnitTesting\UnitTestExample.vb" line="47"><method assemblyName="UnitTesting" name="GetFileContentUsingInterface" token="600002e"><declaringType assemblyName="UnitTesting" name="UnitTestExample" token="200000f" namespace="UnitTesting.UnitTest"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="UnitTesting" name="UnitTestExample" token="200000f" namespace="UnitTesting.UnitTest"/>
</type>
</parameter>
<parameter name="fileName" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[        'Instance Function used for showing usage of Stub type Mocking
        Public Function GetFileContentUsingInterface(ByVal fileName As String) As String
            Dim content As String]]></beforeSource>
<source><![CDATA[            content = Me.Ifs.ReadAllText(fileName)]]></source>
<afterSource><![CDATA[            Return content
        End Function
]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="5aec3629-e037-4fe1-9837-2f0c24666d62"/>
</tag>
</frameNode>
</frameNode>
<frameNode><frame value="  at UnitTestExampleTest.&lt;GetFileContentUsingInterface&gt;b__0(String) in D:\UnitTesting\UnitTesting.Tests\UnitTestExampleTest.cs(63)" method="UnitTestExampleTest.&lt;GetFileContentUsingInterface&gt;b__0(String)" offset="55" file="D:\UnitTesting\UnitTesting.Tests\UnitTestExampleTest.cs" line="63"><method assemblyName="UnitTesting.Tests" name="&lt;GetFileContentUsingInterface&gt;b__0" static="true" token="600000d"><declaringType assemblyName="UnitTesting.Tests" name="UnitTestExampleTest" token="2000002" namespace="UnitTesting.UnitTest"/>
<parameter name="fName" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[                if (fName == null)
                    throw new InvalidOperationException("File Name Can't be NULL");
                else if (fName.Length == 0)]]></beforeSource>
<source><![CDATA[                    throw new InvalidOperationException("Length of File Name Can't be Zero");]]></source>
<afterSource><![CDATA[                else
                    return fName;
            };]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="100a7d63-c479-48de-b574-974119e50e47"/>
</tag>
<frameNode><frame value="  at UnitTestExample.GetFileContentUsingInterface(String) in D:\UnitTesting\UnitTesting\UnitTestExample.vb(47)" method="UnitTestExample.GetFileContentUsingInterface(String)" offset="8" file="D:\UnitTesting\UnitTesting\UnitTestExample.vb" line="47"><method assemblyName="UnitTesting" name="GetFileContentUsingInterface" token="600002e"><declaringType assemblyName="UnitTesting" name="UnitTestExample" token="200000f" namespace="UnitTesting.UnitTest"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="UnitTesting" name="UnitTestExample" token="200000f" namespace="UnitTesting.UnitTest"/>
</type>
</parameter>
<parameter name="fileName" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[        'Instance Function used for showing usage of Stub type Mocking
        Public Function GetFileContentUsingInterface(ByVal fileName As String) As String
            Dim content As String]]></beforeSource>
<source><![CDATA[            content = Me.Ifs.ReadAllText(fileName)]]></source>
<afterSource><![CDATA[            Return content
        End Function
]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="100a7d63-c479-48de-b574-974119e50e47"/>
</tag>
</frameNode>
</frameNode>
</frameException>
</frameTree>
