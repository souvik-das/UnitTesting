// <assemblyHash>be960879</assemblyHash>
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     This source code was auto-generated by Microsoft Moles 2010, Version=0.94.0.0.
// </auto-generated>
#pragma warning disable 0067, 0108, 0618
#line hidden
extern alias mmf;
extern alias ut;

[assembly: mmf::Microsoft.Moles.Framework.MoledAssembly("UnitTesting")]
[assembly: global::System.Reflection.AssemblyCompany("")]
[assembly: global::System.Reflection.AssemblyFileVersion("1.0.0.0")]
[assembly: global::System.Reflection.AssemblyProduct("UnitTesting")]
[assembly: global::System.Reflection.AssemblyVersion("1.0.0.0")]
[module: mmf::Microsoft.Moles.Framework.Moles.MolesInstrument]
namespace UnitTesting.UnitTest.Moles
{
    /// <summary>Mole type of <see cref="T:UnitTesting.UnitTest.FileSystem"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(ut::UnitTesting.UnitTest.FileSystem))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = FileSystem")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MFileSystem
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<ut::UnitTesting.UnitTest.FileSystem>
    {
        /// <summary>Initializes a new mole</summary>
        public MFileSystem()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MFileSystem(ut::UnitTesting.UnitTest.FileSystem instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:UnitTesting.UnitTest.FileSystem.ReadAllText(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ut::UnitTesting.UnitTest.FileSystem, string, string> ReadAllTextString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAllText", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(ut::UnitTesting.UnitTest.FileSystem), (object)null, "ReadAllText", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::UnitTesting.UnitTest.Moles.MFileSystem.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::UnitTesting.UnitTest.Moles.MFileSystem.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(ut::UnitTesting.UnitTest.FileSystem), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:UnitTesting.UnitTest.FileSystem.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ut::UnitTesting.UnitTest.FileSystem> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(ut::UnitTesting.UnitTest.FileSystem), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:UnitTesting.UnitTest.FileSystem.ReadAllText(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> ReadAllTextString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAllText", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<ut::UnitTesting.UnitTest.FileSystem, string, string>(value)), 
                                                                                       typeof(ut::UnitTesting.UnitTest.FileSystem), base.Instance, "ReadAllText", typeof(string));
            }
        }
    }
}
namespace UnitTesting.UnitTest.Moles
{
    /// <summary>Mole type of <see cref="T:UnitTesting.UnitTest.FileSystemUsingInterface"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(ut::UnitTesting.UnitTest.FileSystemUsingInterface))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = FileSystemUsingInterface")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MFileSystemUsingInterface
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<ut::UnitTesting.UnitTest.FileSystemUsingInterface>
    {
        /// <summary>Initializes a new mole</summary>
        public MFileSystemUsingInterface()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MFileSystemUsingInterface(ut::UnitTesting.UnitTest.FileSystemUsingInterface instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:UnitTesting.UnitTest.FileSystemUsingInterface.ReadAllText(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ut::UnitTesting.UnitTest.FileSystemUsingInterface, string, string> ReadAllTextString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAllText", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(ut::UnitTesting.UnitTest.FileSystemUsingInterface), (object)null, "ReadAllText", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::UnitTesting.UnitTest.Moles.MFileSystemUsingInterface.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::UnitTesting.UnitTest.Moles.MFileSystemUsingInterface.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(ut::UnitTesting.UnitTest.FileSystemUsingInterface), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::UnitTesting.UnitTest.Moles.MFileSystemUsingInterface Bind(ut::UnitTesting.UnitTest.IFileSystem target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<ut::UnitTesting.UnitTest.FileSystemUsingInterface, 
                                                                  global::UnitTesting.UnitTest.Moles.MFileSystemUsingInterface, ut::UnitTesting.UnitTest.IFileSystem>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:UnitTesting.UnitTest.FileSystemUsingInterface.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ut::UnitTesting.UnitTest.FileSystemUsingInterface> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(ut::UnitTesting.UnitTest.FileSystemUsingInterface), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:UnitTesting.UnitTest.FileSystemUsingInterface.ReadAllText(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> ReadAllTextString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAllText", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<ut::UnitTesting.UnitTest.FileSystemUsingInterface, string, string>(value)), 
                                                                                       typeof(ut::UnitTesting.UnitTest.FileSystemUsingInterface), base.Instance, "ReadAllText", typeof(string));
            }
        }
    }
}
namespace UnitTesting.UnitTest.Moles
{
    /// <summary>Mole type of <see cref="T:UnitTesting.UnitTest.UnitTestExample"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(ut::UnitTesting.UnitTest.UnitTestExample))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = UnitTestExample")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MUnitTestExample
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<ut::UnitTesting.UnitTest.UnitTestExample>
    {
        /// <summary>Initializes a new mole</summary>
        public MUnitTestExample()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MUnitTestExample(ut::UnitTesting.UnitTest.UnitTestExample instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:UnitTesting.UnitTest.UnitTestExample.Add(System.Int32,System.Int32)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, int, int> AddInt32Int32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(ut::UnitTesting.UnitTest.UnitTestExample), "Add", typeof(int), typeof(int));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:UnitTesting.UnitTest.UnitTestExample.GetFileContentUsingInterface(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ut::UnitTesting.UnitTest.UnitTestExample, string, string> GetFileContentUsingInterfaceString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetFileContentUsingInterface", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(ut::UnitTesting.UnitTest.UnitTestExample), 
                         (object)null, "GetFileContentUsingInterface", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::UnitTesting.UnitTest.Moles.MUnitTestExample.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::UnitTesting.UnitTest.Moles.MUnitTestExample.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(ut::UnitTesting.UnitTest.UnitTestExample), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:UnitTesting.UnitTest.UnitTestExample.Capitalize(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> CapitalizeString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Capitalize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(ut::UnitTesting.UnitTest.UnitTestExample), "Capitalize", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:UnitTesting.UnitTest.UnitTestExample.#ctor(UnitTesting.UnitTest.IFileSystem)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ut::UnitTesting.UnitTest.UnitTestExample, ut::UnitTesting.UnitTest.IFileSystem> ConstructorIFileSystem
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(ut::UnitTesting.UnitTest.UnitTestExample), 
                     (object)null, ".ctor", typeof(ut::UnitTesting.UnitTest.IFileSystem));
            }
        }

        /// <summary>Sets the mole of <see cref="M:UnitTesting.UnitTest.UnitTestExample.GetFileContent(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> GetFileContentString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetFileContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(ut::UnitTesting.UnitTest.UnitTestExample), "GetFileContent", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:UnitTesting.UnitTest.UnitTestExample.GetFileContentUsingInterface(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> GetFileContentUsingInterfaceString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetFileContentUsingInterface", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<ut::UnitTesting.UnitTest.UnitTestExample, string, string>(value)), 
                                                                                       typeof(ut::UnitTesting.UnitTest.UnitTestExample), base.Instance, "GetFileContentUsingInterface", typeof(string));
            }
        }
    }
}
namespace UnitTesting.UnitTest.Moles
{
    /// <summary>Stub type of <see cref="T:UnitTesting.UnitTest.FileSystem"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(ut::UnitTesting.UnitTest.FileSystem))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = FileSystem")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SFileSystem
      : ut::UnitTesting.UnitTest.FileSystem
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SFileSystem()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SFileSystem</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace UnitTesting.UnitTest.Moles
{
    /// <summary>Stub type of <see cref="T:UnitTesting.UnitTest.FileSystemUsingInterface"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(ut::UnitTesting.UnitTest.FileSystemUsingInterface))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = FileSystemUsingInterface")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SFileSystemUsingInterface
      : ut::UnitTesting.UnitTest.FileSystemUsingInterface
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SFileSystemUsingInterface()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SFileSystemUsingInterface</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace UnitTesting.UnitTest.Moles
{
    /// <summary>Stub type of <see cref="T:UnitTesting.UnitTest.IFileSystem"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(ut::UnitTesting.UnitTest.IFileSystem))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = IFileSystem")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SIFileSystem
      : mmf::Microsoft.Moles.Framework.Stubs.StubBase
      , ut::UnitTesting.UnitTest.IFileSystem
    {
        /// <summary>Initializes a new instance of type SIFileSystem</summary>
        public SIFileSystem()
        {
        }

        /// <summary>Sets the stub of <see cref="M:UnitTesting.UnitTest.IFileSystem.ReadAllText(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> ReadAllTextString;

        /// <summary>Sets the stub of <see cref="M:UnitTesting.UnitTest.IFileSystem.ReadAllText(System.String)"/>
        /// </summary>
        string ut::UnitTesting.UnitTest.IFileSystem.ReadAllText(string fileName)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> sh = this.ReadAllTextString;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string>)null)
              return sh.Invoke(fileName);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::UnitTesting.UnitTest.Moles.SIFileSystem, string>(this, "UnitTesting.UnitTest.IFileSystem.ReadAllText");
            }
        }
    }
}
namespace UnitTesting.UnitTest.Moles
{
    /// <summary>Stub type of <see cref="T:UnitTesting.UnitTest.UnitTestExample"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(ut::UnitTesting.UnitTest.UnitTestExample))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = UnitTestExample")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SUnitTestExample
      : ut::UnitTesting.UnitTest.UnitTestExample
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SUnitTestExample(ut::UnitTesting.UnitTest.IFileSystem fs)
        : base(fs)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SUnitTestExample</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
